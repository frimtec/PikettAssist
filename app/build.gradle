apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "com.hiya.jacoco-android"

// Third party library versions
def secure_sms_proxy_api_version = '2.1.1'
def android_billingclient_version = '5.0.0'
def slidetoact_version = '0.9.0'
def takisoft_preferencex_version = '1.1.0'
def junit_version = '5.8.2'

jacoco {
    toolVersion = "0.8.4"
    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
        jacoco.excludes = ['jdk.internal.*']
    }
}

System.setProperty("line.separator", "\n")
Properties versionProps = new Properties()
def versionPropsFile = file('version.properties')
if (versionPropsFile.exists()) {
    versionProps.load(new FileInputStream(versionPropsFile))
}

int vcode = (Integer.parseInt(System.getProperty("version.code.time", String.valueOf((int) (System.currentTimeMillis() / 1000)))) / 60) - 26_797_800
String vname = (versionProps['VERSION_NAME'] == null || versionProps['VERSION_NAME'].startsWith('$')) ? '0.0.0' : versionProps['VERSION_NAME']

def purchaseValidationKeyProperties = new Properties()
try {
    purchaseValidationKeyProperties.load(new FileInputStream(rootProject.file("purchaseValidationKey.properties")))
} catch (Exception ignored) {
    purchaseValidationKeyProperties.put("purchase.validation.key", "\"" + System.getProperty("purchase.validation.key", "NOT_SET") + "\"")
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled false
    xml.enabled true
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.github.frimtec.android.pikettassist"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode vcode
        versionName vname
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "PURCHASE_VALIDATION_KEY", purchaseValidationKeyProperties['purchase.validation.key'])
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    namespace 'com.github.frimtec.android.pikettassist'
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'lib')
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation "com.ncorti:slidetoact:$slidetoact_version"
    implementation "com.takisoft.preferencex:preferencex:$takisoft_preferencex_version"
    implementation "com.takisoft.preferencex:preferencex-ringtone:$takisoft_preferencex_version"
    implementation "com.takisoft.preferencex:preferencex-datetimepicker:$takisoft_preferencex_version"
    implementation "com.android.billingclient:billing:$android_billingclient_version"
    implementation "com.github.frimtec:secure-sms-proxy-api:$secure_sms_proxy_api_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.assertj:assertj-core:3.22.0"
    testImplementation "org.mockito:mockito-core:4.5.1"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}
